API DOCS AND IMPLEMENTATION


Always use the request_token in the header's BEARER-TOKEN for all POST request.

<Request Token>
    axios({
        ...
        url: '.../fetchtoken/{accesstoken}',
        method: 'GET',
        ...
    ))

    Example Success:
    {
        status:200,
        "request_token":"e0wgtea3uzOBC7PPBBt5CiAcstS4TKdWOipZJC0h"
    }
</Request Token>



<User Create>
    axios({
        ...
        url: ".../apis/user/create",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            name:"val"
            email:"email"
            password:"password"
            gender:"m/f"
        }
        ...
    ))
    Example Success
    {
        "status":"200",
        "data":{
            "user":"v78Q"
        }
    }
</User Create>

<User Validate>
    axios({
        ...
        url: ".../apis/user/validate",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            email:"email"
            password:"password"
        }
        ...
    ))
</User Validate>

<User Fetch>
    axios({
        ...
        url: ".../apis/user/fetch",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            fetchset:['name', 'email' ...]
            querypair:[
                [column_name, column_value],
                ["size", "14"],
                ["price", "<1000"]
                ...
            ]
        }
        ...
    ))
</User Fetch>

<User Update>
    axios({
        ...
        url: ".../apis/user/update",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            updset:{
                'name':"New Name", 
                'email' "New Mail"
                ...
            }
            querypair:[
                [column_name, column_value],
                ["size", "14"],
                ["price", "<1000"]
                ...
            ]
        }
        ...
    ))
</User Update>


 
<Post Create>

    data = {
        'title' : "post_title",
        'author_code' : "poster_code",
        'body' : "post_texts",
    }
    axios({
        ...
        url: ".../apis/post/create",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:data
        ...
    ))
    Example Success
    {
        "status":"200",
        "data":{
            "post_code":"v78Q"
        }
    }
</Post Create>

<Post Update>
    axios({
        ...
        url: ".../apis/post/update",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            updset:{
                'title':"New Title", 
                'text' "New Text",
                ...
            }
            querypair:[
                [column_name, column_value],
                ["post_code", "code"],
                ["author_code", "loguser"]
                ...
            ]
        }
        ...
    ))
</Post Update>

<Post Fetch>
    axios({
        ...
        url: ".../apis/post/fetchpost",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            fetchset:['name', 'email' ...]
            querypair:[
                [column_name, column_value],
                ["size", "14"],
                ["price", "<1000"]
                ...
            ]
        }
        ...
    ))
</Post Fetch>

<Posts Fetch>
    //Returns the most recent posts
    axios({
        ...
        url: ".../apis/post/fetchposts",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            max_count:10,
        }
        ...
    ))
</Posts Fetch>

<Post Delete>
    axios({
        ...
        url: ".../apis/post/delete",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            querypair:[
                [column_name, column_value],
                ["post_code", "code"],
                ["author_code", "loguser"]
                ...
            ]
        }
        ...
    ))
    Example Success
    {
        'response' : 'deleted',
        'data' : {
            'deleted_post_code' : "vQdj"
        },
    };
</Post Delete>


<Comment Create>

    data = {
        'post_code' : "post_code",
        'parent_address' : "parent_address",
        'author_code' : "author_code",
        'text' : "Lorem4",
    }
    axios({
        ...
        url: ".../apis/post/addcomment",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:data
        ...
    ))
    Example Success
    {
        "status":"200",
        "data":{
            "address":"base|0|3"
        }
    }
</Comment Create>

<Comment Fetch>
    axios({
        ...
        url: ".../apis/post/fetchcomments",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            post_code:post_code,
            branch_address:"start_address",
            max_count:"max_count",(Optional maximum number of reply comments to fetch)
            max_layer_depth:"max_layer_depth",(Optional maximum number of replies layer to reach from the branch address)
        }
        ...
    ))
</Comment Fetch>


<Comment Delete>

    axios({
        ...
        url: ".../apis/post/deletecomment",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
            'Cache-Control': 'no-cache',
            'Pragma': 'no-cache',
            "BEARER-TOKEN" : "intern@omegatechnologies"
        },
        data:{
            address:comment_address
            post_code:post_code
        }
        ...
    ))
    Example Success
    {
        "response":"deleted",
        "data":{
            "deleted_comment_addr":"v78Q"
        }
    }
</Comment Delete>